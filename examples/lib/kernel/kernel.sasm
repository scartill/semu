/// Kernel functions

CONST LOOPBACK_SUSPEND 0
CONST LOOPBACK_SERIAL 1
CONST LOOPBACK_CREATE_THREAD 2

FUNC Startup BEGIN
    CALL SetupHandlers
    
    // Start system-idle thread
    CALL threads::CreateSysThread
    
    // Return system thread stack pointer    
    ldr &threads::runpt a
    mmr a a             // a = *runpt
    PTR a sp#threads::TCB b
    mmr b a             // return runpt->sp    
    RETURN
END
    
// Setup interrupt handlers
FUNC SetupHandlers BEGIN
    // Loopback handler
    ldr &HLoopback a
    CLOAD hw::INT_VECT_BASE b     // int 0 handler address
    mrm a b                      // Handler = loopback

    // Setup timer
    ldr &threads::HScheduler a
    ldc 4 c
    add b c b     // int 1 handler address
    mrm a b       // Handler = scheduler
    
    RETURN
END

// User interrupt handler - invokes kernel functions
// HLoopback([params], h=service_number)
FUNC HLoopback BEGIN
  suspend: // h == 0
    ldr &serial g
    jgt h g
    ldr &threads::HScheduler g       // NB: no 'cll' instruction
    jmp g                   // - saving the stack intact
    
  serial: // h == 1
    ldc 1 e
    sub h e h
    ldr &create_thread g
    jgt h g
    CALL HWriteSerial
    irx
    
  create_thread: // h == 2    
    CALL threads::CreateThread
    irx
END
    
// Writes a char to serial peripheral
// HWriteSerial(symbol)
FUNC HWriteSerial BEGIN
    CLOAD hw::SERIAL_MM_BASE b       // serial MM base
    mrm a b
    CLOAD hw::SERIAL_LINE c
    out c                   // signal serial
    RETURN
END

